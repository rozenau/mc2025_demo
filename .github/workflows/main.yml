
# This is a basic workflow to help you get started with the C/C++test Coverage for a CMake-based project.
name: Build and test

on:
  # Triggers the workflow on push or pull request events but only for the master (main) branch.
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  build-test:
    name: Build and test

    # Specifies the type of runner that the job will run on.
    runs-on: self-hosted

    # Specifies required permissions for upload-sarif action
    permissions:
      security-events: write
      actions: write
      contents: write
      pages: write
      id-token: write

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:


    # Checks out your repository under $GITHUB_WORKSPACE, so that your job can access it.
    - name: Checkout code
      uses: actions/checkout@v4

    # Builds your CMake project.
    - name: Build project
      run: cpptesttrace make all
      
    # Runs static code analysis with C/C++test.
    - name: Run Static Analysis
      # Use the 'run-cpptest-action' GitHub action.
      uses: parasoft/run-cpptest-action@2.0.2
      with:
        input: cpptestscan.bdf
        testConfig: 'MISRAC2025_server.properties'
        compilerConfig: 'gcc_8-64'
        reportDir: reports
    
    # Uploads an archive that includes all C/C++test report files.
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: CpptestReports
        include-hidden-files: true
        path: |
          reports/

    # Uploads static analysis report in the SARIF format.
    - name: Upload results (SARIF)
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: reports/report.sarif
